// <auto-generated />
using System;
using Database.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Database.Migrations
{
    [DbContext(typeof(APIDbContext))]
    [Migration("20190429084725_Initial_Database")]
    partial class Initial_Database
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Entities.Country", b =>
                {
                    b.Property<string>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CNY_CD")
                        .HasMaxLength(128);

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnName("CNY_NA")
                        .HasMaxLength(2048);

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasColumnName("CCY_NA")
                        .HasMaxLength(2048);

                    b.Property<string>("CurrencySig")
                        .IsRequired()
                        .HasColumnName("CCY_SIG")
                        .HasMaxLength(128);

                    b.Property<string>("Region")
                        .HasColumnName("REGION")
                        .HasMaxLength(2048);

                    b.HasKey("CountryId");

                    b.ToTable("TBL_COUNTRY");
                });

            modelBuilder.Entity("Entities.Entities.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CREATED_USER")
                        .HasMaxLength(2048);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnName("CREATED_DT");

                    b.Property<string>("GroupCode")
                        .HasColumnName("GROUP_CD")
                        .HasMaxLength(128);

                    b.Property<string>("GroupName")
                        .HasColumnName("GROUP_NA")
                        .HasMaxLength(2048);

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnName("LAST_UDT_DT");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnName("LAST_UDT_USER")
                        .HasMaxLength(2048);

                    b.HasKey("Id");

                    b.ToTable("TBL_GROUP");
                });

            modelBuilder.Entity("Entities.Entities.Logwork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Exception");

                    b.Property<string>("Level");

                    b.Property<string>("LogEvent");

                    b.Property<string>("Message");

                    b.Property<DateTime>("TimeStamp");

                    b.HasKey("Id");

                    b.ToTable("TBL_LOG_WORK");
                });

            modelBuilder.Entity("Entities.Entities.SystemConfiguration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CREATED_USER")
                        .HasMaxLength(2048);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnName("CREATED_DT");

                    b.Property<string>("KeyStr")
                        .HasColumnName("KEY")
                        .HasMaxLength(2048);

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnName("LAST_UDT_DT");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnName("LAST_UDT_USER")
                        .HasMaxLength(2048);

                    b.Property<string>("Value")
                        .HasColumnName("VALUE")
                        .HasMaxLength(2048);

                    b.Property<string>("ValueUnit")
                        .HasColumnName("VALUE_UNIT")
                        .HasMaxLength(2048);

                    b.HasKey("Id");

                    b.ToTable("TBL_SYS_CONFIG");
                });

            modelBuilder.Entity("Entities.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnName("ADDRESS")
                        .HasMaxLength(2048);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("CODE")
                        .HasMaxLength(128);

                    b.Property<string>("CountryId")
                        .HasColumnName("CNY_CD")
                        .HasMaxLength(128);

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CREATED_USER")
                        .HasMaxLength(2048);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnName("CREATED_DT");

                    b.Property<string>("Email")
                        .HasColumnName("EMAIL")
                        .HasMaxLength(2048);

                    b.Property<bool>("EndOfDay")
                        .HasColumnName("END_OF_DAY");

                    b.Property<DateTime?>("ExpiredDate")
                        .HasColumnName("EXPIRED_DT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnName("FULL_NAME")
                        .HasMaxLength(2048);

                    b.Property<string>("Groups")
                        .HasColumnName("GROUP_UND_SF")
                        .HasMaxLength(4096);

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnName("LAST_UDT_DT");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnName("LAST_UDT_USER")
                        .HasMaxLength(2048);

                    b.Property<int?>("LoginFailedNumber")
                        .HasColumnName("LOGIN_FAILED_NR");

                    b.Property<DateTime?>("LoginTime")
                        .HasColumnName("LOGIN_TM");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("PASSWORD")
                        .HasMaxLength(1024);

                    b.Property<DateTime?>("PasswordLastUdt")
                        .HasColumnName("PASSWORD_LAST_UDT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnName("PHONE")
                        .HasMaxLength(128);

                    b.Property<DateTime?>("StartDate")
                        .HasColumnName("START_DT");

                    b.Property<string>("StatusStr")
                        .IsRequired()
                        .HasColumnName("STATUS")
                        .HasMaxLength(2048);

                    b.Property<string>("SubcriseToken")
                        .HasColumnName("SUBCRISE_TOKEN")
                        .HasMaxLength(2048);

                    b.Property<string>("Token")
                        .HasColumnName("TOKEN")
                        .HasMaxLength(2048);

                    b.Property<DateTime?>("TokenExpiredDate")
                        .HasColumnName("TOKEN_EXPIRED_DT");

                    b.Property<string>("UserTypeStr")
                        .IsRequired()
                        .HasColumnName("USER_TYP")
                        .HasMaxLength(2048);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("USERNAME")
                        .HasMaxLength(2048);

                    b.Property<string>("Users")
                        .HasColumnName("USERS_UND_MN")
                        .HasMaxLength(4096);

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("TBL_USER");
                });

            modelBuilder.Entity("Entities.Entities.User", b =>
                {
                    b.HasOne("Entities.Entities.Country", "Country")
                        .WithMany("Users")
                        .HasForeignKey("CountryId");
                });
#pragma warning restore 612, 618
        }
    }
}
